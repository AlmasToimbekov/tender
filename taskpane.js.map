{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html lang=\\\"ru\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Tender\\\" title=\\\"Tender\\\"/> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Правила работы с расширением</h2> <ul class=\\\"ms-List ms-welcome__features\\\"> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--UnstackSelected ms-font-xl\\\"></i> <span class=\\\"ms-font-m\\\">Выделите нужные строки, где указаны БИНы для которых нужно обновить данные. Не выбирайте слишком много за раз, т.к. это займет время, кроме того, при большом количестве запросов, источник данных может временно заблокировать отправку данных.</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--Calculator ms-font-xl\\\"></i> <span class=\\\"ms-font-m\\\">Нажмите кнопку \\\"Получить данные\\\"</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--Design ms-font-xl\\\"></i> <span class=\\\"ms-font-m\\\">Столбцы A-F используются для текущей информации, новые столбцы будут добавлены справа. Первая строка используется для заголовков. Изменяя эту структуру повышается риск неисправной работы приложения. При необходимости модификаций может потребоваться изменение кода.</span> </li> </ul> <div role=\\\"button\\\" id=\\\"run\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero ms-font-xl\\\"> <span class=\\\"ms-Button-label\\\">Получить данные</span> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import { CompanyFullInfo } from \"../types\";\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Excel, Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n  }\n});\n\nexport async function run() {\n  const runButton = document.getElementById(\"run\") as HTMLButtonElement;\n  runButton.disabled = true; // Disable the button\n  runButton.classList.add(\"disabled\"); // Add a class for styling\n\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load(\"rowIndex, rowCount\");\n      await context.sync();\n\n      // Calculate the new range address (columns A to F)\n      const startRow = range.rowIndex + 1; // Excel row indices are 1-based\n      const endRow = startRow + range.rowCount - 1;\n      const newRangeAddress = `A${startRow}:F${endRow}`;\n\n      // Get the new range that spans columns A to F\n      const newRange = context.workbook.worksheets.getActiveWorksheet().getRange(newRangeAddress);\n      newRange.load(\"values\");\n      await context.sync();\n\n      // Extract IDs from the new range\n      const ids = newRange.values.map((row) => row[2]); // Assuming the ID is in the third column (index 2)\n\n      // Fetch data for the extracted IDs\n      const data = await fetchData(ids);\n\n      // Populate Excel with the fetched data\n      await populateExcel(data, newRangeAddress);\n    });\n  } catch (error) {\n    console.error(error);\n  } finally {\n    runButton.disabled = false; // Re-enable the button\n    runButton.classList.remove(\"disabled\"); // Remove the class for styling\n  }\n}\n\nasync function fetchData(ids: string[]): Promise<CompanyFullInfo[]> {\n  try {\n    const results: CompanyFullInfo[] = [];\n\n    for (const id of ids) {\n      let response = await fetch(`https://apiba.prgapp.kz/CompanyFullInfo?id=${id}&lang=ru`, {\n        headers: {\n          accept: \"*/*\",\n          \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8,ru;q=0.7\",\n          priority: \"u=1, i\",\n          \"sec-ch-ua\": '\"Not/A)Brand\";v=\"8\", \"Chromium\";v=\"126\", \"Google Chrome\";v=\"126\"',\n          \"sec-ch-ua-mobile\": \"?0\",\n          \"sec-ch-ua-platform\": '\"Windows\"',\n          \"sec-fetch-dest\": \"empty\",\n          \"sec-fetch-mode\": \"cors\",\n          \"sec-fetch-site\": \"cross-site\",\n          Referer: \"https://ba.prg.kz/\",\n          \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n        },\n        body: null,\n        method: \"GET\",\n      });\n\n      let data: CompanyFullInfo = await response.json();\n      results.push(data);\n    }\n\n    return results;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return [];\n  }\n}\n\nasync function populateExcel(data: CompanyFullInfo[], selectedRangeAddress: string) {\n  console.log(\"selectedRangeAddress\", selectedRangeAddress);\n\n  // Map the data to the desired columns\n  const mappedData = data.map((result) => [\n    result.basicInfo.ceo.value?.title,\n    result.basicInfo.addressRu.value,\n    result.gosZakupContacts?.phone?.length > 0\n      ? result.gosZakupContacts.phone.map((item) => item.value).join(\"; \")\n      : \"\",\n    result.basicInfo.registrationDate.value,\n    result.basicInfo.primaryOKED.value,\n    result.basicInfo.secondaryOKED.value?.join(\"; \"),\n  ]);\n\n  // Headers\n  const headers = [\"name\", \"address\", \"phone\", \"registration\", \"primary\", \"secondary\"];\n\n  // Populate the Excel sheet\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const selectedRange = sheet.getRange(selectedRangeAddress);\n    selectedRange.load(\"columnIndex, rowIndex, rowCount\");\n    await context.sync();\n\n    // Calculate the starting cell for the new data\n    const startColumn = 6; // Assuming the Date column is the 6th column (index 5)\n    const startRow = selectedRange.rowIndex;\n\n    // Insert headers\n    const headerRange = sheet.getRangeByIndexes(0, startColumn, 1, headers.length);\n    headerRange.values = [headers];\n\n    headerRange.copyFrom(sheet.getRange(\"A1\"), \"Formats\");\n\n    // Insert data\n    const dataRange = sheet.getRangeByIndexes(startRow, startColumn, mappedData.length, mappedData[0].length);\n    dataRange.values = mappedData;\n\n    dataRange.format.autofitColumns();\n\n    // Set fixed width and enable text wrapping for 'primary' and 'secondary' columns\n    const fixedWidthColumns = [1, 4, 5]; // Indexes of 'address', 'primary', and 'secondary' columns\n    const fixedWidth = 400;\n\n    fixedWidthColumns.forEach((index) => {\n      const columnRange = sheet.getRangeByIndexes(startRow, startColumn + index, mappedData.length + 1, 1);\n      columnRange.format.columnWidth = fixedWidth;\n      columnRange.format.wrapText = true;\n    });\n\n    await context.sync();\n  });\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","async","run","runButton","getElementById","disabled","classList","add","Excel","range","context","workbook","getSelectedRange","load","sync","startRow","rowIndex","newRangeAddress","rowCount","newRange","worksheets","getActiveWorksheet","getRange","ids","values","map","row","data","results","id","response","fetch","headers","accept","priority","Referer","body","method","json","push","error","console","fetchData","selectedRangeAddress","log","mappedData","result","basicInfo","ceo","value","title","addressRu","gosZakupContacts","phone","item","join","registrationDate","primaryOKED","secondaryOKED","sheet","selectedRange","headerRange","getRangeByIndexes","copyFrom","dataRange","format","autofitColumns","forEach","index","columnRange","columnWidth","wrapText","populateExcel","remove","Office","onReady","info","host","HostType","style","display","onclick","URL"],"sourceRoot":""}